import Mathlib

namespace inequality_problem_l1833_183389

-- Define the problem conditions and goal
theorem inequality_problem (x y : ‚Ñù) (hx : 1 ‚â§ x) (hy : 1 ‚â§ y) : 
  x + y + 1 / (x * y) ‚â§ 1 / x + 1 / y + x * y := 
sorry

end inequality_problem_l1833_183389


namespace mod_calculation_l1833_183398

theorem mod_calculation :
  (3 * 43 + 6 * 37) % 60 = 51 :=
by
  sorry

end mod_calculation_l1833_183398


namespace greatest_multiple_of_5_and_6_less_than_1000_l1833_183306

theorem greatest_multiple_of_5_and_6_less_than_1000 : 
  ‚àÉ n : ‚Ñï, n < 1000 ‚àß n % 5 = 0 ‚àß n % 6 = 0 ‚àß ‚àÄ m : ‚Ñï, m < 1000 ‚àß m % 5 = 0 ‚àß m % 6 = 0 ‚Üí m ‚â§ n ‚àß n = 990 :=
by
  sorry

end greatest_multiple_of_5_and_6_less_than_1000_l1833_183306


namespace circle_line_distance_l1833_183301

theorem circle_line_distance (c : ‚Ñù) : 
  (‚àÉ (P‚ÇÅ P‚ÇÇ P‚ÇÉ : ‚Ñù √ó ‚Ñù), 
     (P‚ÇÅ ‚â† P‚ÇÇ ‚àß P‚ÇÇ ‚â† P‚ÇÉ ‚àß P‚ÇÅ ‚â† P‚ÇÉ) ‚àß
     ((P‚ÇÅ.1 - 2)^2 + (P‚ÇÅ.2 - 2)^2 = 18) ‚àß
     ((P‚ÇÇ.1 - 2)^2 + (P‚ÇÇ.2 - 2)^2 = 18) ‚àß
     ((P‚ÇÉ.1 - 2)^2 + (P‚ÇÉ.2 - 2)^2 = 18) ‚àß
     (abs (P‚ÇÅ.1 - P‚ÇÅ.2 + c) / Real.sqrt 2 = 2 * Real.sqrt 2) ‚àß
     (abs (P‚ÇÇ.1 - P‚ÇÇ.2 + c) / Real.sqrt 2 = 2 * Real.sqrt 2) ‚àß
     (abs (P‚ÇÉ.1 - P‚ÇÉ.2 + c) / Real.sqrt 2 = 2 * Real.sqrt 2)) ‚Üî 
  -2 ‚â§ c ‚àß c ‚â§ 2 :=
sorry

end circle_line_distance_l1833_183301


namespace no_two_items_share_color_l1833_183321

theorem no_two_items_share_color (shirts pants hats : Fin 5) :
  ‚àÉ num_outfits : ‚Ñï, num_outfits = 60 :=
by
  sorry

end no_two_items_share_color_l1833_183321


namespace solve_equation_in_natural_numbers_l1833_183385

theorem solve_equation_in_natural_numbers (x y : ‚Ñï) :
  2 * y^2 - x * y - x^2 + 2 * y + 7 * x - 84 = 0 ‚Üî (x = 1 ‚àß y = 6) ‚à® (x = 14 ‚àß y = 13) := 
sorry

end solve_equation_in_natural_numbers_l1833_183385


namespace students_neither_music_nor_art_l1833_183328

theorem students_neither_music_nor_art
  (total_students : ‚Ñï) (students_music : ‚Ñï) (students_art : ‚Ñï) (students_both : ‚Ñï)
  (h_total : total_students = 500)
  (h_music : students_music = 30)
  (h_art : students_art = 10)
  (h_both : students_both = 10)
  : total_students - (students_music + students_art - students_both) = 460 :=
by
  rw [h_total, h_music, h_art, h_both]
  norm_num
  sorry

end students_neither_music_nor_art_l1833_183328


namespace alice_bracelets_given_away_l1833_183344

theorem alice_bracelets_given_away
    (total_bracelets : ‚Ñï)
    (cost_of_materials : ‚Ñù)
    (price_per_bracelet : ‚Ñù)
    (profit : ‚Ñù)
    (bracelets_given_away : ‚Ñï)
    (bracelets_sold : ‚Ñï)
    (total_revenue : ‚Ñù)
    (h1 : total_bracelets = 52)
    (h2 : cost_of_materials = 3)
    (h3 : price_per_bracelet = 0.25)
    (h4 : profit = 8)
    (h5 : total_revenue = profit + cost_of_materials)
    (h6 : total_revenue = price_per_bracelet * bracelets_sold)
    (h7 : total_bracelets = bracelets_sold + bracelets_given_away) :
    bracelets_given_away = 8 :=
by
  sorry

end alice_bracelets_given_away_l1833_183344


namespace randy_biscuits_l1833_183354

theorem randy_biscuits (initial_biscuits father_gift mother_gift brother_ate : ‚Ñï) : 
  (initial_biscuits = 32) ‚Üí
  (father_gift = 13) ‚Üí
  (mother_gift = 15) ‚Üí
  (brother_ate = 20) ‚Üí
  initial_biscuits + father_gift + mother_gift - brother_ate = 40 := by
  sorry

end randy_biscuits_l1833_183354


namespace linear_regression_equation_l1833_183304

theorem linear_regression_equation (x y : ‚Ñù) (h : {(1, 2), (2, 3), (3, 4), (4, 5)} ‚äÜ {(x, y) | y = x + 1}) : 
  (‚àÄ x y, (x = 1 ‚Üí y = 2) ‚àß (x = 2 ‚Üí y = 3) ‚àß (x = 3 ‚Üí y = 4) ‚àß (x = 4 ‚Üí y = 5)) ‚Üî (y = x + 1) :=
by
  sorry

end linear_regression_equation_l1833_183304


namespace x_can_be_any_sign_l1833_183396

theorem x_can_be_any_sign
  (x y p q : ‚Ñù)
  (h1 : abs (x / y) < abs (p) / q^2)
  (h2 : y ‚â† 0) (h3 : q ‚â† 0) :
  ‚àÉ (x' : ‚Ñù), True :=
by
  sorry

end x_can_be_any_sign_l1833_183396


namespace original_cost_l1833_183387

theorem original_cost (C : ‚Ñù) (h : 550 = 1.35 * C) : C = 550 / 1.35 :=
by
  sorry

end original_cost_l1833_183387


namespace bucket_full_weight_l1833_183377

theorem bucket_full_weight (x y c d : ‚Ñù)
  (h1 : x + 3 / 4 * y = c)
  (h2 : x + 1 / 3 * y = d) :
  x + y = (8 / 5) * c - (7 / 5) * d :=
by
  sorry

end bucket_full_weight_l1833_183377


namespace cos_neg_3pi_plus_alpha_l1833_183315

/-- Given conditions: 
  1. ùöåùöòùöú(3œÄ/2 + Œ±) = -3/5,
  2. Œ± is an angle in the fourth quadrant,
Prove: cos(-3œÄ + Œ±) = -4/5 -/
theorem cos_neg_3pi_plus_alpha (Œ± : Real) (h1 : Real.cos (3 * Real.pi / 2 + Œ±) = -3 / 5) (h2 : 0 ‚â§ Œ± ‚àß Œ± < 2 * Real.pi ‚àß Real.sin Œ± < 0) :
  Real.cos (-3 * Real.pi + Œ±) = -4 / 5 := 
sorry

end cos_neg_3pi_plus_alpha_l1833_183315


namespace complex_fraction_sum_real_parts_l1833_183337

theorem complex_fraction_sum_real_parts (a b : ‚Ñù) (h : (‚ü®0, 1‚ü© / ‚ü®1, 1‚ü© : ‚ÑÇ) = a + b * ‚ü®0, 1‚ü©) : a + b = 1 := by
  sorry

end complex_fraction_sum_real_parts_l1833_183337


namespace triangles_hyperbola_parallel_l1833_183394

variable (a b c a1 b1 c1 : ‚Ñù)

-- Defining the property that all vertices lie on the hyperbola y = 1/x
def on_hyperbola (x : ‚Ñù) (y : ‚Ñù) : Prop := y = 1 / x

-- Defining the parallelism condition for line segments
def parallel (slope1 slope2 : ‚Ñù) : Prop := slope1 = slope2

theorem triangles_hyperbola_parallel
  (H1A : on_hyperbola a (1 / a))
  (H1B : on_hyperbola b (1 / b))
  (H1C : on_hyperbola c (1 / c))
  (H2A : on_hyperbola a1 (1 / a1))
  (H2B : on_hyperbola b1 (1 / b1))
  (H2C : on_hyperbola c1 (1 / c1))
  (H_AB_parallel_A1B1 : parallel ((b - a) / (a * b * (a - b))) ((b1 - a1) / (a1 * b1 * (a1 - b1))))
  (H_BC_parallel_B1C1 : parallel ((c - b) / (b * c * (b - c))) ((c1 - b1) / (b1 * c1 * (b1 - c1)))) :
  parallel ((c1 - a) / (a * c1 * (a - c1))) ((c - a1) / (a1 * c * (a1 - c))) :=
sorry

end triangles_hyperbola_parallel_l1833_183394


namespace horse_revolutions_l1833_183345

theorem horse_revolutions (r1 r2  : ‚Ñù) (rev1 rev2 : ‚Ñï)
  (h1 : r1 = 30) (h2 : rev1 = 20) (h3 : r2 = 10) : rev2 = 60 :=
by
  sorry

end horse_revolutions_l1833_183345


namespace log4_21_correct_l1833_183359

noncomputable def log4_21 (a b : ‚Ñù) (h1 : Real.log 3 = a * Real.log 2)
                                     (h2 : Real.log 2 = b * Real.log 7) : ‚Ñù :=
  (a * b + 1) / (2 * b)

theorem log4_21_correct (a b : ‚Ñù) (h1 : Real.log 3 = a * Real.log 2) 
                        (h2 : Real.log 2 = b * Real.log 7) : 
  log4_21 a b h1 h2 = (a * b + 1) / (2 * b) := 
sorry

end log4_21_correct_l1833_183359


namespace octal_to_base5_conversion_l1833_183338

-- Define the octal to decimal conversion
def octalToDecimal (n : ‚Ñï) : ‚Ñï :=
  2 * 8^3 + 0 * 8^2 + 1 * 8^1 + 1 * 8^0

-- Define the base-5 number
def base5Representation : ‚Ñï := 13113

-- Theorem statement
theorem octal_to_base5_conversion :
  octalToDecimal 2011 = base5Representation := 
sorry

end octal_to_base5_conversion_l1833_183338


namespace determine_m_l1833_183324

theorem determine_m (m : ‚Ñù) :
  (‚àÄ x : ‚Ñù, 1 < x ‚àß x < 2 ‚Üî m * (x - 1) > x^2 - x) ‚Üí m = 2 :=
sorry

end determine_m_l1833_183324


namespace fourth_sphere_radius_l1833_183339

theorem fourth_sphere_radius (R r : ‚Ñù) (h1 : R > 0)
  (h2 : ‚àÄ (a b c d : ‚Ñù √ó ‚Ñù √ó ‚Ñù), a ‚â† b ‚àß b ‚â† c ‚àß c ‚â† d ‚àß d ‚â† a ‚Üí
    dist a b = 2*R ‚àß dist b c = 2*R ‚àß dist c d = 2*R ‚àß dist d a = R + r ‚àß
    dist a c = R + r ‚àß dist b d = R + r) :
  r = 4*R/3 :=
  sorry

end fourth_sphere_radius_l1833_183339


namespace total_kids_in_lawrence_county_l1833_183326

def kids_stayed_home : ‚Ñï := 644997
def kids_went_to_camp : ‚Ñï := 893835
def kids_from_outside : ‚Ñï := 78

theorem total_kids_in_lawrence_county : kids_stayed_home + kids_went_to_camp = 1538832 := by
  sorry

end total_kids_in_lawrence_county_l1833_183326


namespace mika_stickers_l1833_183386

def s1 : ‚Ñù := 20.5
def s2 : ‚Ñù := 26.3
def s3 : ‚Ñù := 19.75
def s4 : ‚Ñù := 6.25
def s5 : ‚Ñù := 57.65
def s6 : ‚Ñù := 15.8

theorem mika_stickers 
  (M : ‚Ñù)
  (hM : M = s1 + s2 + s3 + s4 + s5 + s6) 
  : M = 146.25 :=
sorry

end mika_stickers_l1833_183386


namespace triangle_ratio_l1833_183314

theorem triangle_ratio (a b c : ‚Ñù) (P Q : ‚Ñù) (h‚ÇÅ : a ‚â† b) (h‚ÇÇ : a ‚â† c) (h‚ÇÉ : b ‚â† c)
  (h‚ÇÑ : P > 0) (h‚ÇÖ : Q > P) (h‚ÇÜ : Q < c) (h‚Çá : P = 21) (h‚Çà : Q - P = 35) (h‚Çâ : c - Q = 100)
  (h‚ÇÅ‚ÇÄ : P + (Q - P) + (c - Q) = c)
  (angle_trisect : ‚àÉ x y : ‚Ñù, x ‚â† y ‚àß x = a / b ‚àß y = 7 / 45) :
  ‚àÉ p q r : ‚Ñï, p + q + r = 92 ‚àß p.gcd r = 1 ‚àß ¬¨ ‚àÉ k : ‚Ñï, k^2 ‚à£ q := sorry

end triangle_ratio_l1833_183314


namespace eval_expression_l1833_183308

theorem eval_expression : (49^2 - 25^2 + 10^2) = 1876 := by
  sorry

end eval_expression_l1833_183308


namespace new_marketing_percentage_l1833_183364

theorem new_marketing_percentage 
  (total_students : ‚Ñï)
  (initial_finance_percentage : ‚Ñï)
  (initial_marketing_percentage : ‚Ñï)
  (initial_operations_management_percentage : ‚Ñï)
  (new_finance_percentage : ‚Ñï)
  (operations_management_percentage : ‚Ñï)
  (total_percentage : ‚Ñï) :
  total_students = 5000 ‚Üí
  initial_finance_percentage = 85 ‚Üí
  initial_marketing_percentage = 80 ‚Üí
  initial_operations_management_percentage = 10 ‚Üí
  new_finance_percentage = 92 ‚Üí
  operations_management_percentage = 10 ‚Üí
  total_percentage = 175 ‚Üí
  initial_marketing_percentage - (new_finance_percentage - initial_finance_percentage) = 73 :=
by
  sorry

end new_marketing_percentage_l1833_183364


namespace find_y_l1833_183378

theorem find_y (y : ‚Ñï) (h1 : y % 6 = 5) (h2 : y % 7 = 6) (h3 : y % 8 = 7) : y = 167 := 
by
  sorry  -- Proof is omitted

end find_y_l1833_183378


namespace max_value_of_symmetric_function_l1833_183374

noncomputable def f (x a b : ‚Ñù) : ‚Ñù := (1 - x^2) * (x^2 + a * x + b)

theorem max_value_of_symmetric_function (a b : ‚Ñù) :
  (‚àÄ x : ‚Ñù, f (-2 - x) a b = f (-2 + x) a b) ‚Üí ‚àÉ x : ‚Ñù, ‚àÄ y : ‚Ñù, f x a b ‚â• f y a b ‚àß f x a b = 16 :=
sorry

end max_value_of_symmetric_function_l1833_183374


namespace tom_age_l1833_183395

theorem tom_age (c : ‚Ñï) (h1 : 2 * c - 1 = tom) (h2 : c + 3 = dave) (h3 : c + (2 * c - 1) + (c + 3) = 30) : tom = 13 :=
  sorry

end tom_age_l1833_183395


namespace unique_solution_real_l1833_183352

theorem unique_solution_real {x y : ‚Ñù} (h1 : x * (x + y)^2 = 9) (h2 : x * (y^3 - x^3) = 7) :
  x = 1 ‚àß y = 2 :=
sorry

end unique_solution_real_l1833_183352


namespace complement_union_eq_l1833_183399

open Set

variable (U A B : Set ‚Ñ§)

noncomputable def universal_set : Set ‚Ñ§ := {-2, -1, 0, 1, 2, 3}

noncomputable def setA : Set ‚Ñ§ := {-1, 0, 3}

noncomputable def setB : Set ‚Ñ§ := {1, 3}

theorem complement_union_eq :
  A ‚à™ B = {-1, 0, 1, 3} ‚Üí
  U = universal_set ‚Üí
  A = setA ‚Üí
  B = setB ‚Üí
  (U \ (A ‚à™ B)) = {-2, 2} := by
  intros
  sorry

end complement_union_eq_l1833_183399


namespace fishing_problem_l1833_183347

theorem fishing_problem :
  ‚àÉ F : ‚Ñï, (F % 3 = 1 ‚àß
            ((F - 1) / 3) % 3 = 1 ‚àß
            ((((F - 1) / 3 - 1) / 3) % 3 = 1) ‚àß
            ((((F - 1) / 3 - 1) / 3 - 1) / 3) % 3 = 1 ‚àß
            ((((F - 1) / 3 - 1) / 3 - 1) / 3 - 1) = 0) :=
sorry

end fishing_problem_l1833_183347


namespace tan_proof_l1833_183335

noncomputable def prove_tan_relation (Œ± Œ≤ : ‚Ñù) : Prop :=
  2 * (Real.tan Œ±) = 3 * (Real.tan Œ≤)

theorem tan_proof (Œ± Œ≤ : ‚Ñù) (h : Real.tan (Œ± - Œ≤) = (Real.sin (2*Œ≤)) / (5 - Real.cos (2*Œ≤))) : 
  prove_tan_relation Œ± Œ≤ :=
sorry

end tan_proof_l1833_183335


namespace initial_liquid_X_percentage_is_30_l1833_183367

variable (initial_liquid_X_percentage : ‚Ñù)

theorem initial_liquid_X_percentage_is_30
  (solution_total_weight : ‚Ñù := 8)
  (initial_water_percentage : ‚Ñù := 70)
  (evaporated_water_weight : ‚Ñù := 3)
  (added_solution_weight : ‚Ñù := 3)
  (new_liquid_X_percentage : ‚Ñù := 41.25)
  (total_new_solution_weight : ‚Ñù := 8)
  :
  initial_liquid_X_percentage = 30 :=
sorry

end initial_liquid_X_percentage_is_30_l1833_183367


namespace solve_equation_l1833_183392

theorem solve_equation (x : ‚Ñù) (h : x ‚â† 4) :
  (x - 3) / (4 - x) - 1 = 1 / (x - 4) ‚Üí x = 3 :=
by
  sorry

end solve_equation_l1833_183392


namespace part_one_part_two_l1833_183390

noncomputable def f (x a : ‚Ñù) : ‚Ñù :=
  |x + a| + 2 * |x - 1|

theorem part_one (a : ‚Ñù) (h : a = 1) : 
  ‚àÉ x : ‚Ñù, f x 1 = 2 :=
sorry

theorem part_two (a b : ‚Ñù) 
  (ha : 0 < a) 
  (hb : 0 < b) 
  (hx : ‚àÄ x : ‚Ñù, 1 ‚â§ x ‚Üí x ‚â§ 2 ‚Üí f x a > x^2 - b + 1) : 
  (a + 1 / 2)^2 + (b + 1 / 2)^2 > 2 :=
sorry

end part_one_part_two_l1833_183390


namespace xn_plus_inv_xn_is_integer_l1833_183388

theorem xn_plus_inv_xn_is_integer (x : ‚Ñù) (hx : x ‚â† 0) (k : ‚Ñ§) (h : x + 1/x = k) :
  ‚àÄ n : ‚Ñï, ‚àÉ m : ‚Ñ§, x^n + 1/x^n = m :=
by sorry

end xn_plus_inv_xn_is_integer_l1833_183388


namespace g_h_2_eq_583_l1833_183311

def g (x : ‚Ñù) : ‚Ñù := 3*x^2 - 5

def h (x : ‚Ñù) : ‚Ñù := -2*x^3 + 2

theorem g_h_2_eq_583 : g (h 2) = 583 :=
by
  sorry

end g_h_2_eq_583_l1833_183311


namespace cost_per_gallon_is_45_l1833_183316

variable (totalArea coverage cost_jason cost_jeremy dollars_per_gallon : ‚Ñï)

-- Conditions
def total_area := 1600
def coverage_per_gallon := 400
def num_coats := 2
def contribution_jason := 180
def contribution_jeremy := 180

-- Gallons needed calculation
def gallons_per_coat := total_area / coverage_per_gallon
def total_gallons := gallons_per_coat * num_coats

-- Total cost calculation
def total_cost := contribution_jason + contribution_jeremy

-- Cost per gallon calculation
def cost_per_gallon := total_cost / total_gallons

-- Proof statement
theorem cost_per_gallon_is_45 : cost_per_gallon = 45 :=
by
  sorry

end cost_per_gallon_is_45_l1833_183316


namespace molecular_weight_ammonia_l1833_183362

def atomic_weight_N : ‚Ñù := 14.01
def atomic_weight_H : ‚Ñù := 1.008
def count_N : ‚Ñï := 1
def count_H : ‚Ñï := 3

theorem molecular_weight_ammonia :
  (count_N * atomic_weight_N) + (count_H * atomic_weight_H) = 17.034 :=
by
  sorry

end molecular_weight_ammonia_l1833_183362


namespace instantaneous_velocity_at_3_l1833_183383

-- Define the displacement function
def displacement (t : ‚Ñù) : ‚Ñù := t^2 - t

-- State the main theorem that we need to prove
theorem instantaneous_velocity_at_3 : (deriv displacement 3 = 5) := by
  sorry

end instantaneous_velocity_at_3_l1833_183383


namespace tessa_initial_apples_l1833_183351

-- Define conditions as variables
variable (initial_apples anita_gave : ‚Ñï)
variable (apples_needed_for_pie : ‚Ñï := 10)
variable (apples_additional_now_needed : ‚Ñï := 1)

-- Define the current amount of apples Tessa has
noncomputable def current_apples :=
  apples_needed_for_pie - apples_additional_now_needed

-- Define the initial apples Tessa had before Anita gave her 5 apples
noncomputable def initial_apples_calculated :=
  current_apples - anita_gave

-- Lean statement to prove the initial number of apples Tessa had
theorem tessa_initial_apples (h_initial_apples : anita_gave = 5) : initial_apples_calculated = 4 :=
by
  -- Here is where the proof would go; we use sorry to indicate it's not provided
  sorry

end tessa_initial_apples_l1833_183351


namespace find_x_eq_2_l1833_183357

theorem find_x_eq_2 (x : ‚Ñï) (h : 7899665 - 36 * x = 7899593) : x = 2 := 
by
  sorry

end find_x_eq_2_l1833_183357


namespace no_combination_of_three_coins_sums_to_52_cents_l1833_183320

def is_valid_coin (c : ‚Ñï) : Prop :=
  c = 5 ‚à® c = 10 ‚à® c = 25 ‚à® c = 50 ‚à® c = 100

theorem no_combination_of_three_coins_sums_to_52_cents :
  ¬¨ ‚àÉ a b c : ‚Ñï, is_valid_coin a ‚àß is_valid_coin b ‚àß is_valid_coin c ‚àß a + b + c = 52 :=
by 
  sorry

end no_combination_of_three_coins_sums_to_52_cents_l1833_183320


namespace compute_x_squared_y_plus_xy_squared_l1833_183391

theorem compute_x_squared_y_plus_xy_squared 
  (x y : ‚Ñù)
  (h1 : (1 / x) + (1 / y) = 4)
  (h2 : x * y + x + y = 7) :
  x^2 * y + x * y^2 = 49 := 
  sorry

end compute_x_squared_y_plus_xy_squared_l1833_183391


namespace circle_radius_l1833_183332

theorem circle_radius :
  ‚àÉ radius : ‚Ñù, (‚àÄ (x y : ‚Ñù), (x - 2)^2 + (y - 1)^2 = 16 ‚Üí (x - 2)^2 + (y - 1)^2 = radius^2)
  ‚àß radius = 4 :=
sorry

end circle_radius_l1833_183332


namespace goldfish_problem_l1833_183325

theorem goldfish_problem (x : ‚Ñï) : 
  (18 + (x - 5) * 7 = 4) ‚Üí (x = 3) :=
by
  intros
  sorry

end goldfish_problem_l1833_183325


namespace quadratic_root_condition_l1833_183358

theorem quadratic_root_condition (d : ‚Ñù) :
  (‚àÄ x, x^2 + 7 * x + d = 0 ‚Üí x = (-7 + Real.sqrt d) / 2 ‚à® x = (-7 - Real.sqrt d) / 2) ‚Üí d = 9.8 :=
by
  intro h
  sorry

end quadratic_root_condition_l1833_183358


namespace suitable_high_jump_athlete_l1833_183369

structure Athlete where
  average : ‚Ñï
  variance : ‚Ñù

def A : Athlete := ‚ü®169, 6.0‚ü©
def B : Athlete := ‚ü®168, 17.3‚ü©
def C : Athlete := ‚ü®169, 5.0‚ü©
def D : Athlete := ‚ü®168, 19.5‚ü©

def isSuitableCandidate (athlete: Athlete) (average_threshold: ‚Ñï) : Prop :=
  athlete.average = average_threshold

theorem suitable_high_jump_athlete : isSuitableCandidate C 169 ‚àß
  (‚àÄ a, isSuitableCandidate a 169 ‚Üí a.variance ‚â• C.variance) := by
  sorry

end suitable_high_jump_athlete_l1833_183369


namespace greatest_integer_difference_l1833_183302

theorem greatest_integer_difference (x y : ‚Ñ§) (hx : 7 < x ‚àß x < 9) (hy : 9 < y ‚àß y < 15) :
  ‚àÄ d : ‚Ñ§, (d = y - x) ‚Üí d ‚â§ 6 := 
sorry

end greatest_integer_difference_l1833_183302


namespace percentage_k_equal_125_percent_j_l1833_183331

theorem percentage_k_equal_125_percent_j
  (j k l m : ‚Ñù)
  (h1 : 1.25 * j = (x / 100) * k)
  (h2 : 1.5 * k = 0.5 * l)
  (h3 : 1.75 * l = 0.75 * m)
  (h4 : 0.2 * m = 7 * j) :
  x = 25 := 
sorry

end percentage_k_equal_125_percent_j_l1833_183331


namespace red_light_max_probability_l1833_183330

theorem red_light_max_probability {m : ‚Ñï} (h1 : m > 0) (h2 : m < 35) :
  m = 3 ‚à® m = 15 ‚à® m = 30 ‚à® m = 40 ‚Üí m = 30 :=
by
  sorry

end red_light_max_probability_l1833_183330


namespace sequence_formula_l1833_183382

theorem sequence_formula (a_n : ‚Ñï ‚Üí ‚Ñù) (S_n : ‚Ñï ‚Üí ‚Ñù) (h : ‚àÄ n, S_n n = 3 + 2 * a_n n) :
  ‚àÄ n, a_n n = -3 * 2^(n - 1) :=
by
  sorry

end sequence_formula_l1833_183382


namespace intersection_M_complement_N_l1833_183381

open Set Real

def M : Set ‚Ñù := {x | (x + 1) / (x - 2) ‚â§ 0}
def N : Set ‚Ñù := {x | (Real.log 2) ^ (1 - x) < 1}
def complement_N := {x : ‚Ñù | x ‚â• 1}

theorem intersection_M_complement_N :
  M ‚à© complement_N = {x | 1 ‚â§ x ‚àß x < 2} :=
by
  sorry

end intersection_M_complement_N_l1833_183381


namespace parameter_condition_l1833_183307

theorem parameter_condition (a : ‚Ñù) :
  let D := 4 - 4 * a
  let diff_square := ((-2 / a) ^ 2 - 4 * (1 / a))
  D = 9 * diff_square -> a = -3 :=
by
  sorry -- Proof omitted

end parameter_condition_l1833_183307


namespace jerry_charge_per_hour_l1833_183300

-- Define the conditions from the problem
def time_painting : ‚Ñù := 8
def time_fixing_counter : ‚Ñù := 3 * time_painting
def time_mowing_lawn : ‚Ñù := 6
def total_time_worked : ‚Ñù := time_painting + time_fixing_counter + time_mowing_lawn
def total_payment : ‚Ñù := 570

-- The proof statement
theorem jerry_charge_per_hour : 
  total_payment / total_time_worked = 15 :=
by
  sorry

end jerry_charge_per_hour_l1833_183300


namespace total_parents_in_auditorium_l1833_183397

-- Define the conditions.
def girls : Nat := 6
def boys : Nat := 8
def total_kids : Nat := girls + boys
def parents_per_kid : Nat := 2
def total_parents : Nat := total_kids * parents_per_kid

-- The statement to prove.
theorem total_parents_in_auditorium : total_parents = 28 := by
  sorry

end total_parents_in_auditorium_l1833_183397


namespace range_of_alpha_minus_beta_l1833_183366

variable (Œ± Œ≤ : ‚Ñù)

theorem range_of_alpha_minus_beta (h1 : -90 < Œ±) (h2 : Œ± < Œ≤) (h3 : Œ≤ < 90) : -180 < Œ± - Œ≤ ‚àß Œ± - Œ≤ < 0 := 
by
  sorry

end range_of_alpha_minus_beta_l1833_183366


namespace cuboid_volume_l1833_183327

theorem cuboid_volume (P h : ‚Ñù) (P_eq : P = 32) (h_eq : h = 9) :
  ‚àÉ (s : ‚Ñù), 4 * s = P ‚àß s * s * h = 576 :=
by
  sorry

end cuboid_volume_l1833_183327


namespace intersection_sums_l1833_183334

def parabola1 (x : ‚Ñù) : ‚Ñù := (x - 2)^2
def parabola2 (y : ‚Ñù) : ‚Ñù := (y - 2)^2 - 6

theorem intersection_sums (x1 x2 x3 x4 y1 y2 y3 y4 : ‚Ñù) 
  (h1 : y1 = parabola1 x1) (h2 : y2 = parabola1 x2)
  (h3 : y3 = parabola1 x3) (h4 : y4 = parabola1 x4)
  (k1 : x1 + 6 = y1^2 - 4*y1 + 4) (k2 : x2 + 6 = y2^2 - 4*y2 + 4)
  (k3 : x3 + 6 = y3^2 - 4*y3 + 4) (k4 : x4 + 6 = y4^2 - 4*y4 + 4) :
  x1 + x2 + x3 + x4 + y1 + y2 + y3 + y4 = 16 := 
sorry

end intersection_sums_l1833_183334


namespace geom_series_common_ratio_l1833_183361

theorem geom_series_common_ratio (a r S : ‚Ñù) (h1 : S = a / (1 - r)) 
  (h2 : (ar^4) / (1 - r) = S / 64) : r = 1 / 2 :=
sorry

end geom_series_common_ratio_l1833_183361


namespace no_real_solution_for_quadratic_eq_l1833_183336

theorem no_real_solution_for_quadratic_eq (y : ‚Ñù) :
  (8 * y^2 + 155 * y + 3) / (4 * y + 45) = 4 * y + 3 ‚Üí  (¬¨ ‚àÉ y : ‚Ñù, (8 * y^2 + 37 * y + 33/2 = 0)) :=
by
  sorry

end no_real_solution_for_quadratic_eq_l1833_183336


namespace worker_overtime_hours_l1833_183360

theorem worker_overtime_hours :
  ‚àÉ (x y : ‚Ñï), 60 * x + 90 * y = 3240 ‚àß x + y = 50 ‚àß y = 8 :=
by
  sorry

end worker_overtime_hours_l1833_183360


namespace mode_of_data_set_is_60_l1833_183310

theorem mode_of_data_set_is_60
  (data : List ‚Ñï := [65, 60, 75, 60, 80])
  (mode : ‚Ñï := 60) :
  mode = 60 ‚àß (‚àÄ x ‚àà data, data.count x ‚â§ data.count 60) :=
by {
  sorry
}

end mode_of_data_set_is_60_l1833_183310


namespace average_of_remaining_numbers_l1833_183371

theorem average_of_remaining_numbers 
  (numbers : List ‚Ñù) 
  (h_len : numbers.length = 50) 
  (h_avg : (numbers.sum / 50) = 20)
  (h_disc : 45 ‚àà numbers ‚àß 55 ‚àà numbers) 
  (h_count_45_55 : numbers.count 45 = 1 ‚àß numbers.count 55 = 1) :
  (numbers.sum - 45 - 55) / (50 - 2) = 18.75 :=
by
  sorry

end average_of_remaining_numbers_l1833_183371


namespace no_n_geq_2_for_nquad_plus_nsquare_plus_one_prime_l1833_183329

theorem no_n_geq_2_for_nquad_plus_nsquare_plus_one_prime :
  ¬¨‚àÉ n : ‚Ñï, 2 ‚â§ n ‚àß Nat.Prime (n^4 + n^2 + 1) :=
sorry

end no_n_geq_2_for_nquad_plus_nsquare_plus_one_prime_l1833_183329


namespace C_finishes_work_in_days_l1833_183355

theorem C_finishes_work_in_days :
  (‚àÄ (unit : ‚Ñù) (A B C combined: ‚Ñù),
    combined = 1 / 4 ‚àß
    A = 1 / 12 ‚àß
    B = 1 / 24 ‚àß
    combined = A + B + 1 / C) ‚Üí 
    C = 8 :=
  sorry

end C_finishes_work_in_days_l1833_183355


namespace triangle_side_relation_l1833_183353

theorem triangle_side_relation (a b c : ‚Ñù) 
    (h_angles : 55 = 55 ‚àß 15 = 15 ‚àß 110 = 110) :
    c^2 - a^2 = a * b :=
  sorry

end triangle_side_relation_l1833_183353


namespace remainder_19_pow_19_plus_19_mod_20_l1833_183318

theorem remainder_19_pow_19_plus_19_mod_20 : (19 ^ 19 + 19) % 20 = 18 := 
by {
  sorry
}

end remainder_19_pow_19_plus_19_mod_20_l1833_183318


namespace miles_traveled_total_l1833_183341

-- Define the initial distance and the additional distance
def initial_distance : ‚Ñù := 212.3
def additional_distance : ‚Ñù := 372.0

-- Define the total distance as the sum of the initial and additional distances
def total_distance : ‚Ñù := initial_distance + additional_distance

-- Prove that the total distance is 584.3 miles
theorem miles_traveled_total : total_distance = 584.3 := by
  sorry

end miles_traveled_total_l1833_183341


namespace general_eq_line_BC_std_eq_circumscribed_circle_ABC_l1833_183319

-- Define the points A, B, and C
def A : ‚Ñù √ó ‚Ñù := (-1, 1)
def B : ‚Ñù √ó ‚Ñù := (-1, 2)
def C : ‚Ñù √ó ‚Ñù := (-4, 1)

-- Prove the general equation of line BC is x + 1 = 0
theorem general_eq_line_BC : ‚àÄ x y : ‚Ñù, (x = -1) ‚Üí y = 2 ‚àß (x = -4) ‚Üí y = 1 ‚Üí x + 1 = 0 :=
by
  sorry

-- Prove the standard equation of the circumscribed circle of triangle ABC is (x + 5/2)^2 + (y - 3/2)^2 = 5/2
theorem std_eq_circumscribed_circle_ABC :
  ‚àÄ x y : ‚Ñù,
  (x, y) = (A : ‚Ñù √ó ‚Ñù) ‚à® (x, y) = (B : ‚Ñù √ó ‚Ñù) ‚à® (x, y) = (C : ‚Ñù √ó ‚Ñù) ‚Üí
  (x + 5/2)^2 + (y - 3/2)^2 = 5/2 :=
by
  sorry

end general_eq_line_BC_std_eq_circumscribed_circle_ABC_l1833_183319


namespace number_made_l1833_183322

theorem number_made (x y : ‚Ñï) (h1 : x + y = 24) (h2 : x = 11) : 7 * x + 5 * y = 142 := by
  sorry

end number_made_l1833_183322


namespace power_comparison_l1833_183350

noncomputable
def compare_powers : Prop := 
  1.5^(1 / 3.1) < 2^(1 / 3.1) ‚àß 2^(1 / 3.1) < 2^(3.1)

theorem power_comparison : compare_powers :=
by
  sorry

end power_comparison_l1833_183350


namespace integer_solutions_system_l1833_183379

theorem integer_solutions_system :
  {x : ‚Ñ§ | (4 * (1 + x) / 3 - 1 ‚â§ (5 + x) / 2) ‚àß (x - 5 ‚â§ (3 * (3 * x - 2)) / 2)} = {0, 1, 2} :=
by
  sorry

end integer_solutions_system_l1833_183379


namespace avg_rate_of_change_interval_1_2_l1833_183376

def f (x : ‚Ñù) : ‚Ñù := 2 * x + 1

theorem avg_rate_of_change_interval_1_2 : 
  (f 2 - f 1) / (2 - 1) = 2 :=
by sorry

end avg_rate_of_change_interval_1_2_l1833_183376


namespace river_joe_collected_money_l1833_183368

theorem river_joe_collected_money :
  let price_catfish : ‚Ñ§ := 600 -- in cents to avoid floating point issues
  let price_shrimp : ‚Ñ§ := 350 -- in cents to avoid floating point issues
  let total_orders : ‚Ñ§ := 26
  let shrimp_orders : ‚Ñ§ := 9
  let catfish_orders : ‚Ñ§ := total_orders - shrimp_orders
  let total_catfish_sales : ‚Ñ§ := catfish_orders * price_catfish
  let total_shrimp_sales : ‚Ñ§ := shrimp_orders * price_shrimp
  let total_money_collected : ‚Ñ§ := total_catfish_sales + total_shrimp_sales
  total_money_collected = 13350 := -- in cents, so $133.50 is 13350 cents
by
  sorry

end river_joe_collected_money_l1833_183368


namespace find_x_l1833_183317

theorem find_x (x y : ‚Ñï) (h1 : y = 144) (h2 : x^3 * 6^2 / 432 = y) : x = 12 := 
by
  sorry

end find_x_l1833_183317


namespace area_of_R2_l1833_183348

theorem area_of_R2
  (a b : ‚Ñù)
  (h1 : b = 3 * a)
  (h2 : a^2 + b^2 = 225) :
  a * b = 135 / 2 :=
by
  sorry

end area_of_R2_l1833_183348


namespace sum_of_a_and_b_l1833_183305

noncomputable def log_function (a b x : ‚Ñù) : ‚Ñù := Real.log (x + b) / Real.log a

theorem sum_of_a_and_b (a b : ‚Ñù) (h1 : 0 < a) (h2 : a ‚â† 1) (h3 : log_function a b 2 = 1)
                      (h4 : ‚àÉ x : ‚Ñù, log_function a b x = 8 ‚àß log_function a b x = 2) :
  a + b = 4 :=
by
  sorry

end sum_of_a_and_b_l1833_183305


namespace john_adds_and_subtracts_l1833_183313

theorem john_adds_and_subtracts :
  (41^2 = 40^2 + 81) ‚àß (39^2 = 40^2 - 79) :=
by {
  sorry
}

end john_adds_and_subtracts_l1833_183313


namespace find_value_l1833_183370

theorem find_value (x : ‚Ñ§) (h : 3 * x - 45 = 159) : (x + 32) * 12 = 1200 :=
by
  sorry

end find_value_l1833_183370


namespace cost_of_one_bag_of_onions_l1833_183309

theorem cost_of_one_bag_of_onions (price_per_onion : ‚Ñï) (total_onions : ‚Ñï) (num_bags : ‚Ñï) (h_price : price_per_onion = 200) (h_onions : total_onions = 180) (h_bags : num_bags = 6) :
  (total_onions / num_bags) * price_per_onion = 6000 := 
  by
  sorry

end cost_of_one_bag_of_onions_l1833_183309


namespace intercepts_of_line_l1833_183340

-- Define the given line equation
def line_eq (x y : ‚Ñù) : Prop := x / 4 - y / 3 = 1

-- Define the intercepts
def intercepts (x_intercept y_intercept : ‚Ñù) : Prop :=
  (line_eq x_intercept 0) ‚àß (line_eq 0 y_intercept)

-- The problem statement: proving the values of intercepts
theorem intercepts_of_line :
  intercepts 4 (-3) :=
by
  sorry

end intercepts_of_line_l1833_183340


namespace largest_prime_divisor_in_range_l1833_183342

theorem largest_prime_divisor_in_range (n : ‚Ñï) (h1 : 1000 ‚â§ n) (h2 : n ‚â§ 1100) :
  ‚àÉ p, Prime p ‚àß p ‚â§ Int.floor (Real.sqrt n) ‚àß 
  (‚àÄ q, Prime q ‚àß q ‚â§ Int.floor (Real.sqrt n) ‚Üí q ‚â§ p) :=
sorry

end largest_prime_divisor_in_range_l1833_183342


namespace number_of_members_l1833_183375

theorem number_of_members (n : ‚Ñï) (h : n * n = 2025) : n = 45 :=
sorry

end number_of_members_l1833_183375


namespace determine_values_l1833_183363

-- Define the main problem conditions
def A := 1.2
def B := 12

-- The theorem statement capturing the problem conditions and the solution
theorem determine_values (A B : ‚Ñù) (h1 : A + B = 13.2) (h2 : B = 10 * A) : A = 1.2 ‚àß B = 12 :=
  sorry

end determine_values_l1833_183363


namespace find_a_b_l1833_183372

theorem find_a_b (a b : ‚Ñ§) (h : ({a, 0, -1} : Set ‚Ñ§) = {4, b, 0}) : a = 4 ‚àß b = -1 := by
  sorry

end find_a_b_l1833_183372


namespace number_of_observations_l1833_183312

theorem number_of_observations (n : ‚Ñï) (h1 : 200 - 6 = 194) (h2 : 200 * n - n * 6 = n * 194) :
  n > 0 :=
by
  sorry

end number_of_observations_l1833_183312


namespace compute_expression_l1833_183365

theorem compute_expression : 9 + 7 * (5 - Real.sqrt 16)^2 = 16 := by
  sorry

end compute_expression_l1833_183365


namespace mnmn_not_cube_in_base_10_and_find_smallest_base_b_l1833_183373

theorem mnmn_not_cube_in_base_10_and_find_smallest_base_b 
    (m n : ‚Ñï) (h1 : m * 10^3 + n * 10^2 + m * 10 + n < 10000) :
    ¬¨ (‚àÉ k : ‚Ñï, (m * 10^3 + n * 10^2 + m * 10 + n) = k^3) 
    ‚àß ‚àÉ b : ‚Ñï, b > 1 ‚àß (‚àÉ k : ‚Ñï, (m * b^3 + n * b^2 + m * b + n = k^3)) :=
by sorry

end mnmn_not_cube_in_base_10_and_find_smallest_base_b_l1833_183373


namespace task_completion_time_l1833_183393

theorem task_completion_time :
  let rate_A := 1 / 10
  let rate_B := 1 / 15
  let rate_C := 1 / 15
  let combined_rate := rate_A + rate_B + rate_C
  let working_days_A := 2
  let working_days_B := 1
  let rest_day_A := 1
  let rest_days_B := 2
  let work_done_A := rate_A * working_days_A
  let work_done_B := rate_B * working_days_B
  let work_done_C := rate_C * (working_days_A + rest_day_A)
  let work_done := work_done_A + work_done_B + work_done_C
  let remaining_work := 1 - work_done
  let total_days := (work_done / combined_rate) + rest_day_A + rest_days_B
  total_days = 4 + 1 / 7 := by sorry

end task_completion_time_l1833_183393


namespace min_value_of_even_function_l1833_183349

-- Define f(x) = (x + a)(x + b)
def f (x a b : ‚Ñù) : ‚Ñù := (x + a) * (x + b)

-- Given conditions
variables (a b : ‚Ñù)
#check f  -- Ensuring the definition works

-- Prove that the minimum value of f(x) is -4 given that f(x) is an even function
theorem min_value_of_even_function (h_even : ‚àÄ x : ‚Ñù, f x a b = f (-x) a b)
  (h_domain : a + 4 > a) : ‚àÉ c : ‚Ñù, (f c a b = -4) :=
by
  -- We state that this function is even and consider the provided domain.
  sorry  -- Placeholder for the proof

end min_value_of_even_function_l1833_183349


namespace danny_distance_to_work_l1833_183346

-- Define the conditions and the problem in terms of Lean definitions
def distance_to_first_friend : ‚Ñï := 8
def distance_to_second_friend : ‚Ñï := distance_to_first_friend / 2
def total_distance_driven_so_far : ‚Ñï := distance_to_first_friend + distance_to_second_friend
def distance_to_work : ‚Ñï := 3 * total_distance_driven_so_far

-- Lean statement to be proven
theorem danny_distance_to_work :
  distance_to_work = 36 :=
by
  -- This is the proof placeholder
  sorry

end danny_distance_to_work_l1833_183346


namespace incorrect_equation_l1833_183323

theorem incorrect_equation (x : ‚Ñï) (h : x + 2 * (12 - x) = 20) : 2 * (12 - x) - 20 ‚â† x :=
by 
  sorry

end incorrect_equation_l1833_183323


namespace find_y_l1833_183343

-- Define the conditions (inversely proportional and sum condition)
def inversely_proportional (x y : ‚Ñù) (k : ‚Ñù) : Prop := x * y = k
def sum_condition (x y : ‚Ñù) : Prop := x + y = 50 ‚àß x = 3 * y

-- Given these conditions, prove the value of y when x = -12
theorem find_y (k x y : ‚Ñù)
  (h1 : inversely_proportional x y k)
  (h2 : sum_condition 37.5 12.5)
  (hx : x = -12) :
  y = -39.0625 :=
sorry

end find_y_l1833_183343


namespace boxes_per_case_l1833_183303

-- Define the conditions
def total_boxes : ‚Ñï := 54
def total_cases : ‚Ñï := 9

-- Define the result we want to prove
theorem boxes_per_case : total_boxes / total_cases = 6 := 
by sorry

end boxes_per_case_l1833_183303


namespace DanteSoldCoconuts_l1833_183333

variable (Paolo_coconuts : ‚Ñï) (Dante_coconuts : ‚Ñï) (coconuts_left : ‚Ñï)

def PaoloHasCoconuts := Paolo_coconuts = 14

def DanteHasThriceCoconuts := Dante_coconuts = 3 * Paolo_coconuts

def DanteLeftCoconuts := coconuts_left = 32

theorem DanteSoldCoconuts 
  (h1 : PaoloHasCoconuts Paolo_coconuts) 
  (h2 : DanteHasThriceCoconuts Paolo_coconuts Dante_coconuts) 
  (h3 : DanteLeftCoconuts coconuts_left) : 
  Dante_coconuts - coconuts_left = 10 := 
by
  rw [PaoloHasCoconuts, DanteHasThriceCoconuts, DanteLeftCoconuts] at *
  sorry

end DanteSoldCoconuts_l1833_183333


namespace parent_payment_per_year_l1833_183356

noncomputable def former_salary : ‚Ñï := 45000
noncomputable def raise_percentage : ‚Ñï := 20
noncomputable def number_of_kids : ‚Ñï := 9

theorem parent_payment_per_year : 
  (former_salary + (raise_percentage * former_salary / 100)) / number_of_kids = 6000 := by
  sorry

end parent_payment_per_year_l1833_183356


namespace greatest_four_digit_number_divisible_by_6_and_12_l1833_183380

theorem greatest_four_digit_number_divisible_by_6_and_12 : 
  ‚àÉ n : ‚Ñï, 1000 ‚â§ n ‚àß n < 10000 ‚àß (n % 6 = 0) ‚àß (n % 12 = 0) ‚àß 
  (‚àÄ m : ‚Ñï, 1000 ‚â§ m ‚àß m < 10000 ‚àß (m % 6 = 0) ‚àß (m % 12 = 0) ‚Üí m ‚â§ n) ‚àß
  n = 9996 := 
by
  sorry

end greatest_four_digit_number_divisible_by_6_and_12_l1833_183380


namespace maddie_episodes_friday_l1833_183384

theorem maddie_episodes_friday :
  let total_episodes : ‚Ñï := 8
  let episode_duration : ‚Ñï := 44
  let monday_time : ‚Ñï := 138
  let thursday_time : ‚Ñï := 21
  let weekend_time : ‚Ñï := 105
  let total_time : ‚Ñï := total_episodes * episode_duration
  let non_friday_time : ‚Ñï := monday_time + thursday_time + weekend_time
  let friday_time : ‚Ñï := total_time - non_friday_time
  let friday_episodes : ‚Ñï := friday_time / episode_duration
  friday_episodes = 2 :=
by
  sorry

end maddie_episodes_friday_l1833_183384
